name: Download data from RKI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.**'
      - 'data/*'
      - 'R/maintenance/*'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.**'
      - 'data/*'
      - 'R/maintenance/*'
  schedule:
      - cron: '0 */1 * * *'
jobs:
  update-data:
    name: Download and extract data
    runs-on: "macos-latest"
    steps:
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'
      - name: install vaccc19de
        run: |
          install.packages('remotes')
          remotes::install_github("friep/vaccc19de")
          install.packages('glue')
          install.packages('readr')
        shell: Rscript {0}
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: "Download data"
        run: |
          source('R/download_and_update.R')
        shell: Rscript {0}
      - name: "Read datenstand and check whether data was updated" 
        id: check-whether-updated
        run: |
          TS_DATENSTAND=$(cat /tmp/ts_datenstand.txt)
          IS_UPDATED=1; [ "$TS_DATENSTAND" == "No update" ] || res=0
          echo $TS_DATENSTAND
          echo $IS_UPDATED
          echo "::set-output name=TS_DATENSTAND::$TS_DATENSTAND"
          echo "::set-output name=IS_UPDATED::$IS_UPDATED"
          echo "::set-output name=TS_DOWNLOAD::$(cat /tmp/ts_download.txt)"

      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        if:  ${{ steps.check-whether-updated.outputs.IS_UPDATED == 1 }}
        with:
          author_name: "GitHub Action"
          author_email: bot_user@frie.codes
          message: ${{ format('{{ Update with data up to {0}}}', $steps.check-whether-updated.outputs.TS_DATENSTAND) }}
          add: "data/ --force"
          tag: ${{ format('{{ v{0} }}, ${{steps.check-whether-updated.outputs.TS_DATENSTAND}} ) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        if:  ${{ steps.check-whether-updated.outputs.IS_UPDATED == 1 }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ format('{{ v{0} }}, $steps.check-whether-updated.outputs.TS_DATENSTAND ) }}
          release_name: ${{ format('{{Data up to {0}}}', $steps.check-whether-updated.outputs.TS_DATENSTAND) }}
          body: |
            Add data as of ${{steps.check-whether-updated.outputs.TS_DATENSTAND}}
            Downloaded at ${{steps.check-whether-updated.outputs.TS_DOWNLOAD}}
          draft: false
          prerelease: false